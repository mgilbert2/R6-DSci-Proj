knitr::opts_chunk$set(echo = TRUE)
# Dependencies
library(tidyverse)
library(ggrepel)
library(skimr)
library(rvest)
library(googlesheets4)
library(viridis)
library(hexbin)
gs4_auth()
url <- "https://www.ign.com/wikis/rainbow-six-siege/Weapons_and_Equipment"
page <- read_html(url)
table_data <- page %>%
#   html_nodes("section.jsx-2191675443.jsx-380427680.jsx-28683165.wiki-section.wiki-html table") %>%
html_table()
my_table <- table_data[[1]]
skim(table_data)
View(my_table)
colnames(my_table)
# [1] "Name"                 "Type"                 "Operator"
# [4] "Team"                 "CTU"                  "Damage (Suppressed*)"
# [7] "ROF"                  "Magazine"             "Suppressor"
# [10] "ACOG"                 ""
colnames(my_table)[11] <- "Range"
my_table<- my_table %>%
rename(Weapon = Name)
# View the result
print(my_table)
# # Splitting the operator column based on uppercase letters
# # Split the Operator column and unnest the result
# my_table_split <- my_table %>%
#   # Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
#   mutate(Operator = str_extract_all(Operator, "[A-Z][a-z]+")) %>%
#   # Unnest the list column to separate rows
#   unnest(Operator)
#
# # View the result
# print(my_table_split)
# view(my_table_split)
#
# ## There's a major issue missing IQ LOL because its two uppercase letters
## Jager has a special char rename.
my_table<- my_table %>%
mutate(Operator = ifelse(Operator == "Jäger", "Jager", Operator))
# Splitting the operator column based on uppercase letters
# Split the Operator column and unnest the result
my_table_split <- my_table %>%
# Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
# or all uppercase strings with 2 or more characters
mutate(Operator = str_extract_all(Operator, "([A-Z][a-z]+|[A-Z]{2,})")) %>%
# Unnest the list column to separate rows
unnest(Operator)
# View the result
print(my_table_split)
high_pick <- c("Finka", "Iana", "Sledge", "Thatcher", "Twitch", "Alibi", "Jager", "Melusi", "Mute")
average_pick <- c("Valkyrie", "Thunderbird", "Smoke", "Bandit", "Kaid", "Wamai", "Mozzie", "Azami", "Lesion", "Kapkan", "Aruni", "Oryx", "Jackal", "Ace", "Thermite", "Zofia", "Maverick", "Hibana", "Ash", "Nomad")
low_pick <- c("Buck", "Osa", "Nokk", "Flores", "Amaru", "IQ", "Zero", "Montagne", "Dokkaebi", "Blackbeard", "Lion", "Blitz", "Kali", "Capitao", "Fuze", "Ying", "Gridlock", "Glaz", "Sens", "Vigil", "Doc", "Ela", "Mira", "Goyo", "Frost", "Thorn", "Maestro", "Pulse", "Rook", "Castle", "Clash", "Warden", "Caveira", "Echo", "Tachanka")
my_table_long <- my_table_split %>%
mutate(PickRate = case_when(
Operator %in% high_pick ~ "High Pick Rate",
Operator %in% average_pick ~ "Average Pick Rate",
Operator %in% low_pick ~ "Low Pick Rate",
TRUE ~ NA_character_
))
# View the modified table with the new PickRate column
summary(my_table_long)
# Filter for High Pick Rate weapons
high_pick_rate_weapons <- my_table_long %>% filter(`PickRate` == 'High Pick Rate')
# Create the ggplot
ggplot(high_pick_rate_weapons, aes(x = Weapon)) +
geom_bar() +
coord_flip() +  # Flipping the axis for better visualization
labs(title = "Weapons associated with 'High Pick Rate' Operators",
x = "Weapons",
y = "Count") +
theme_minimal()
# Filter data for 'High Pick Rate'
high_pick_data <- my_table_long[my_table_long$`PickRate` == "High Pick Rate", ]
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_brewer(palette = "Set3", name = "Weapon"
#
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_viridis_c(name = "Weapon", discrete = TRUE)
SCOAR<- "1BxIHO_VHKXuNYypY6NRihik98HJN1b9d0_nZCE_l-ts"
SCOAR_ARECOIL <-googlesheets4::read_sheet(SCOAR, range = "attacker guns!L:L")
knitr::opts_chunk$set(echo = TRUE)
# Dependencies
library(tidyverse)
library(ggrepel)
library(skimr)
library(rvest)
library(googlesheets4)
library(viridis)
library(hexbin)
gs4_auth()
url <- "https://www.ign.com/wikis/rainbow-six-siege/Weapons_and_Equipment"
page <- read_html(url)
table_data <- page %>%
#   html_nodes("section.jsx-2191675443.jsx-380427680.jsx-28683165.wiki-section.wiki-html table") %>%
html_table()
my_table <- table_data[[1]]
skim(table_data)
View(my_table)
colnames(my_table)
# [1] "Name"                 "Type"                 "Operator"
# [4] "Team"                 "CTU"                  "Damage (Suppressed*)"
# [7] "ROF"                  "Magazine"             "Suppressor"
# [10] "ACOG"                 ""
colnames(my_table)[11] <- "Range"
my_table<- my_table %>%
rename(Weapon = Name)
# View the result
print(my_table)
# # Splitting the operator column based on uppercase letters
# # Split the Operator column and unnest the result
# my_table_split <- my_table %>%
#   # Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
#   mutate(Operator = str_extract_all(Operator, "[A-Z][a-z]+")) %>%
#   # Unnest the list column to separate rows
#   unnest(Operator)
#
# # View the result
# print(my_table_split)
# view(my_table_split)
#
# ## There's a major issue missing IQ LOL because its two uppercase letters
## Jager has a special char rename.
my_table<- my_table %>%
mutate(Operator = ifelse(Operator == "Jäger", "Jager", Operator))
# Splitting the operator column based on uppercase letters
# Split the Operator column and unnest the result
my_table_split <- my_table %>%
# Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
# or all uppercase strings with 2 or more characters
mutate(Operator = str_extract_all(Operator, "([A-Z][a-z]+|[A-Z]{2,})")) %>%
# Unnest the list column to separate rows
unnest(Operator)
# View the result
print(my_table_split)
high_pick <- c("Finka", "Iana", "Sledge", "Thatcher", "Twitch", "Alibi", "Jager", "Melusi", "Mute")
average_pick <- c("Valkyrie", "Thunderbird", "Smoke", "Bandit", "Kaid", "Wamai", "Mozzie", "Azami", "Lesion", "Kapkan", "Aruni", "Oryx", "Jackal", "Ace", "Thermite", "Zofia", "Maverick", "Hibana", "Ash", "Nomad")
low_pick <- c("Buck", "Osa", "Nokk", "Flores", "Amaru", "IQ", "Zero", "Montagne", "Dokkaebi", "Blackbeard", "Lion", "Blitz", "Kali", "Capitao", "Fuze", "Ying", "Gridlock", "Glaz", "Sens", "Vigil", "Doc", "Ela", "Mira", "Goyo", "Frost", "Thorn", "Maestro", "Pulse", "Rook", "Castle", "Clash", "Warden", "Caveira", "Echo", "Tachanka")
my_table_long <- my_table_split %>%
mutate(PickRate = case_when(
Operator %in% high_pick ~ "High Pick Rate",
Operator %in% average_pick ~ "Average Pick Rate",
Operator %in% low_pick ~ "Low Pick Rate",
TRUE ~ NA_character_
))
# View the modified table with the new PickRate column
summary(my_table_long)
# Filter for High Pick Rate weapons
high_pick_rate_weapons <- my_table_long %>% filter(`PickRate` == 'High Pick Rate')
# Create the ggplot
ggplot(high_pick_rate_weapons, aes(x = Weapon)) +
geom_bar() +
coord_flip() +  # Flipping the axis for better visualization
labs(title = "Weapons associated with 'High Pick Rate' Operators",
x = "Weapons",
y = "Count") +
theme_minimal()
# Filter data for 'High Pick Rate'
high_pick_data <- my_table_long[my_table_long$`PickRate` == "High Pick Rate", ]
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_brewer(palette = "Set3", name = "Weapon"
#
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_viridis_c(name = "Weapon", discrete = TRUE)
SCOAR<- "1BxIHO_VHKXuNYypY6NRihik98HJN1b9d0_nZCE_l-ts"
SCOAR_ARECOIL <-googlesheets4::read_sheet(SCOAR, range = "attacker guns!L:L")
knitr::opts_chunk$set(echo = TRUE)
# Dependencies
library(tidyverse)
library(ggrepel)
library(skimr)
library(rvest)
library(googlesheets4)
library(viridis)
library(hexbin)
gs4_auth()
googlesheets4::gs4_auth(force = TRUE)
# Dependencies
library(tidyverse)
library(ggrepel)
library(skimr)
library(rvest)
library(googlesheets4)
library(viridis)
library(hexbin)
gs4_auth()
# googlesheets4::gs4_auth(force = TRUE)
# Dependencies
library(tidyverse)
library(ggrepel)
library(skimr)
library(rvest)
library(googlesheets4)
library(viridis)
library(hexbin)
gs4_auth()
# googlesheets4::gs4_auth(force = TRUE)
url <- "https://www.ign.com/wikis/rainbow-six-siege/Weapons_and_Equipment"
page <- read_html(url)
table_data <- page %>%
#   html_nodes("section.jsx-2191675443.jsx-380427680.jsx-28683165.wiki-section.wiki-html table") %>%
html_table()
my_table <- table_data[[1]]
skim(table_data)
View(my_table)
colnames(my_table)
# [1] "Name"                 "Type"                 "Operator"
# [4] "Team"                 "CTU"                  "Damage (Suppressed*)"
# [7] "ROF"                  "Magazine"             "Suppressor"
# [10] "ACOG"                 ""
colnames(my_table)[11] <- "Range"
my_table<- my_table %>%
rename(Weapon = Name)
# View the result
print(my_table)
# # Splitting the operator column based on uppercase letters
# # Split the Operator column and unnest the result
# my_table_split <- my_table %>%
#   # Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
#   mutate(Operator = str_extract_all(Operator, "[A-Z][a-z]+")) %>%
#   # Unnest the list column to separate rows
#   unnest(Operator)
#
# # View the result
# print(my_table_split)
# view(my_table_split)
#
# ## There's a major issue missing IQ LOL because its two uppercase letters
## Jager has a special char rename.
my_table<- my_table %>%
mutate(Operator = ifelse(Operator == "Jäger", "Jager", Operator))
# Splitting the operator column based on uppercase letters
# Split the Operator column and unnest the result
my_table_split <- my_table %>%
# Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
# or all uppercase strings with 2 or more characters
mutate(Operator = str_extract_all(Operator, "([A-Z][a-z]+|[A-Z]{2,})")) %>%
# Unnest the list column to separate rows
unnest(Operator)
# View the result
print(my_table_split)
high_pick <- c("Finka", "Iana", "Sledge", "Thatcher", "Twitch", "Alibi", "Jager", "Melusi", "Mute")
average_pick <- c("Valkyrie", "Thunderbird", "Smoke", "Bandit", "Kaid", "Wamai", "Mozzie", "Azami", "Lesion", "Kapkan", "Aruni", "Oryx", "Jackal", "Ace", "Thermite", "Zofia", "Maverick", "Hibana", "Ash", "Nomad")
low_pick <- c("Buck", "Osa", "Nokk", "Flores", "Amaru", "IQ", "Zero", "Montagne", "Dokkaebi", "Blackbeard", "Lion", "Blitz", "Kali", "Capitao", "Fuze", "Ying", "Gridlock", "Glaz", "Sens", "Vigil", "Doc", "Ela", "Mira", "Goyo", "Frost", "Thorn", "Maestro", "Pulse", "Rook", "Castle", "Clash", "Warden", "Caveira", "Echo", "Tachanka")
my_table_long <- my_table_split %>%
mutate(PickRate = case_when(
Operator %in% high_pick ~ "High Pick Rate",
Operator %in% average_pick ~ "Average Pick Rate",
Operator %in% low_pick ~ "Low Pick Rate",
TRUE ~ NA_character_
))
# View the modified table with the new PickRate column
summary(my_table_long)
# Filter for High Pick Rate weapons
high_pick_rate_weapons <- my_table_long %>% filter(`PickRate` == 'High Pick Rate')
# Create the ggplot
ggplot(high_pick_rate_weapons, aes(x = Weapon)) +
geom_bar() +
coord_flip() +  # Flipping the axis for better visualization
labs(title = "Weapons associated with 'High Pick Rate' Operators",
x = "Weapons",
y = "Count") +
theme_minimal()
# Filter data for 'High Pick Rate'
high_pick_data <- my_table_long[my_table_long$`PickRate` == "High Pick Rate", ]
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_brewer(palette = "Set3", name = "Weapon"
#
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_viridis_c(name = "Weapon", discrete = TRUE)
SCOAR<- "1BxIHO_VHKXuNYypY6NRihik98HJN1b9d0_nZCE_l-ts"
SCOAR_ARECOIL <-googlesheets4::read_sheet(SCOAR, range = "attacker guns!L:L")
setwd("C:/Users/Mak/Desktop/DataSciProj/R6-DSci-Proj")
knitr::opts_chunk$set(echo = TRUE)
ggplot(fulldf, aes(x = PickRate, y = Recoil, label = Weapon)) +
geom_point(aes(color = Recoil), size = 3) +
geom_text_repel(aes(label = Weapon), box.padding = 0.5) +
labs(title = "Weapon Pick Rate vs Recoil",
x = "Pick Rate",
y = "Recoil") +
theme_minimal() +
scale_color_gradient(low = "blue", high = "red")
knitr::opts_chunk$set(echo = TRUE)
# Dependencies
library(tidyverse)
library(ggrepel)
library(skimr)
library(rvest)
library(googlesheets4)
library(viridis)
library(hexbin)
gs4_auth()
# googlesheets4::gs4_auth(force = TRUE)
url <- "https://www.ign.com/wikis/rainbow-six-siege/Weapons_and_Equipment"
page <- read_html(url)
table_data <- page %>%
#   html_nodes("section.jsx-2191675443.jsx-380427680.jsx-28683165.wiki-section.wiki-html table") %>%
html_table()
my_table <- table_data[[1]]
skim(table_data)
View(my_table)
colnames(my_table)
# [1] "Name"                 "Type"                 "Operator"
# [4] "Team"                 "CTU"                  "Damage (Suppressed*)"
# [7] "ROF"                  "Magazine"             "Suppressor"
# [10] "ACOG"                 ""
colnames(my_table)[11] <- "Range"
my_table<- my_table %>%
rename(Weapon = Name)
# View the result
print(my_table)
# # Splitting the operator column based on uppercase letters
# # Split the Operator column and unnest the result
# my_table_split <- my_table %>%
#   # Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
#   mutate(Operator = str_extract_all(Operator, "[A-Z][a-z]+")) %>%
#   # Unnest the list column to separate rows
#   unnest(Operator)
#
# print(my_table_split)
# view(my_table_split)
#
#  There's a major issue missing IQ because its two uppercase letters
## Jager has a special char rename.
my_table<- my_table %>%
mutate(Operator = ifelse(Operator == "Jäger", "Jager", Operator))
# Splitting the operator column based on uppercase letters
# Split the Operator column and unnest the result
my_table_split <- my_table %>%
# Use str_extract_all to find all uppercase followed by lowercase strings (operators' names)
# or all uppercase strings with 2 or more characters
mutate(Operator = str_extract_all(Operator, "([A-Z][a-z]+|[A-Z]{2,})")) %>%
# Unnest the list column to separate rows
unnest(Operator)
high_pick <- c("Finka", "Iana", "Sledge", "Thatcher", "Twitch", "Alibi", "Jager", "Melusi", "Mute")
average_pick <- c("Valkyrie", "Thunderbird", "Smoke", "Bandit", "Kaid", "Wamai", "Mozzie", "Azami", "Lesion", "Kapkan", "Aruni", "Oryx", "Jackal", "Ace", "Thermite", "Zofia", "Maverick", "Hibana", "Ash", "Nomad")
low_pick <- c("Buck", "Osa", "Nokk", "Flores", "Amaru", "IQ", "Zero", "Montagne", "Dokkaebi", "Blackbeard", "Lion", "Blitz", "Kali", "Capitao", "Fuze", "Ying", "Gridlock", "Glaz", "Sens", "Vigil", "Doc", "Ela", "Mira", "Goyo", "Frost", "Thorn", "Maestro", "Pulse", "Rook", "Castle", "Clash", "Warden", "Caveira", "Echo", "Tachanka")
my_table_long <- my_table_split %>%
mutate(PickRate = case_when(
Operator %in% high_pick ~ "High Pick Rate",
Operator %in% average_pick ~ "Average Pick Rate",
Operator %in% low_pick ~ "Low Pick Rate",
TRUE ~ NA_character_
))
# View the modified table with the new PickRate column
summary(my_table_long)
# Filter for High Pick Rate weapons
high_pick_rate_weapons <- my_table_long %>% filter(`PickRate` == 'High Pick Rate')
# Create the ggplot
ggplot(high_pick_rate_weapons, aes(x = Weapon)) +
geom_bar() +
coord_flip() +  # Flipping the axis for better visualization
labs(title = "Weapons associated with 'High Pick Rate' Operators",
x = "Weapons",
y = "Count") +
theme_minimal()
# Filter data for 'High Pick Rate'
high_pick_data <- my_table_long[my_table_long$`PickRate` == "High Pick Rate", ]
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_brewer(palette = "Set3", name = "Weapon"
#
# # Plot
# ggplot(high_pick_data, aes(x = Operator, fill = Weapon)) +
#   geom_bar() +
#   labs(title = "High Pick Rate Operators and Their Weapons",
#        x = "Operator",
#        y = "Count") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   scale_fill_viridis_c(name = "Weapon", discrete = TRUE)
SCOAR<- "1BxIHO_VHKXuNYypY6NRihik98HJN1b9d0_nZCE_l-ts"
SCOAR_ARECOIL <-googlesheets4::read_sheet(SCOAR, range = "attacker guns!L:L")
SCOAR_AWEAPON <- read_sheet(SCOAR, range = "attacker guns!B:B")
# Merge the two columns by row number
atrecoil_data <- cbind(SCOAR_AWEAPON, SCOAR_ARECOIL)
# View the merged data frame
print(atrecoil_data)
SCOAR<- "1BxIHO_VHKXuNYypY6NRihik98HJN1b9d0_nZCE_l-ts"
SCOAR_DRECOIL <-googlesheets4::read_sheet(SCOAR, range = "defender guns!L:L")
SCOAR_DWEAPON <- read_sheet(SCOAR, range = "defender guns!B:B")
# Merge the two columns by row number
defrecoil_data <- cbind(SCOAR_DWEAPON, SCOAR_DRECOIL)
# View the merged data frame
print(defrecoil_data)
combo_recoil <- rbind(defrecoil_data, atrecoil_data)
combo_recoil<- unique(combo_recoil)
## interesting 71 obs... still some missing,
# Filtering the table
filtered_table <- my_table_long %>%
filter(
Weapon != "AR-15.50",
Type != "Handgun",
Type != "Marksman Rifle",
Type != "Shotgun",
!(Type == "Machine Pistol" & Weapon != "SPSMG9")
)
# Get the unique weapons from the Weapon column after filtering
unique_weapons <- unique(filtered_table$Weapon)
# Count the number of unique weapons
number_of_unique_weapons <- length(unique_weapons)
# Print the result
print(number_of_unique_weapons)
fulldf<- merge(filtered_table, combo_recoil, by = "Weapon", all.x = TRUE)
#print(fulldf)
ggplot(fulldf, aes(x = PickRate, y = Recoil, label = Weapon)) +
geom_point(aes(color = Recoil), size = 3) +
geom_text_repel(aes(label = Weapon), box.padding = 0.5) +
labs(title = "Weapon Pick Rate vs Recoil",
x = "Pick Rate",
y = "Recoil") +
theme_minimal() +
scale_color_gradient(low = "blue", high = "red")
ggplot(fulldf, aes(x=PickRate, y=Recoil)) +
geom_hex(bins=30) +
scale_fill_viridis_c() +
labs(title = "Hexbin plot of Weapon PickRate vs Recoil",
x = "PickRate",
y = "Recoil",
fill = "Frequency") +
theme_minimal()
high_pick_df <- subset(fulldf, PickRate == "High Pick Rate")
ggplot(high_pick_df, aes(x = Weapon, y = Recoil)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() + # Makes the plot horizontal for better readability with weapon names
labs(title = "Recoil of High Pick Rate Weapons",
x = "Weapon",
y = "Recoil Value") +
theme_minimal()
# Discretize the Recoil column
fulldf$RecoilRange <- cut(fulldf$Recoil,
breaks=c(-Inf, -0.5, 0, 0.5, Inf),
labels=c("Very High Recoil", "High Recoil", "Medium Recoil", "Low Recoil"))
# Count the number of weapons in each combination of Pick Rate and Recoil range
heatmap_data <- as.data.frame(table(fulldf$PickRate, fulldf$RecoilRange))
colnames(heatmap_data) <- c("PickRate", "RecoilRange", "Count")
# Reorder the levels of PickRate
heatmap_data$PickRate <- factor(heatmap_data$PickRate, levels = c("Low Pick Rate", "Average Pick Rate", "High Pick Rate"))
# Plot
ggplot(heatmap_data, aes(x = PickRate, y = RecoilRange, fill = Count)) +
geom_tile() +
geom_text(aes(label = Count), vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Number of Weapons by Pick Rate and Recoil Range",
x = "Pick Rate",
y = "Recoil Range",
fill = "Number of Weapons") +
theme_minimal()
# Ensure PickRate is an ordered factor
fulldf$PickRate <- factor(fulldf$PickRate, levels = c("Low Pick Rate", "Average Pick Rate", "High Pick Rate"), ordered = TRUE)
# Convert to numeric for correlation test
fulldf$PickRateNumeric <- as.numeric(fulldf$PickRate)
# Use Kendall's Tau for correlation
cor.test(~ Recoil + PickRateNumeric, data = fulldf, method = "kendall")
